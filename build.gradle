buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "maven-publish"
}

apply plugin: 'net.minecraftforge.gradle'

def build_number = 'CUSTOM'

if (System.getenv('BUILD_NUMBER') != null)
    build_number = System.getenv('BUILD_NUMBER')

group = package_group
version = "${mc_version}-${mod_version}-${build_number}"
archivesBaseName = "${mod_name}-forge"

minecraft {
    mappings channel: "snapshot", version: "20190816-1.14.3"

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
            property 'username', 'Harvest'

            mods {
                harvest {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            mods {
                harvest {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.toml'

        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.toml'
    }
}

repositories {

}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

apply from: "gradle/process_mod_info.gradle"

// Combine main and API source sets
jar {
    from sourceSets.main.output
    manifest {
        attributes(["Specification-Title": project.name,
                    "Specification-Vendor": "TehNut",
                    "Specification-Version": "1", // We are version 1 of ourselves
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"TehNut",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

tasks.build.dependsOn sourcesJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

String getChangelogText() {
    def changelogFile = new File('changelog.txt')
    String str = ''
    String separator = '---'
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (lineCount < 3) {
            lineCount++
            if (it.startsWith(separator)) {
                return
            }
        }
        if (!it.startsWith(separator)) {
            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
            return
        }
        done = true // once we go past the first version block, parse no more
    }
    return str
}

curseforge {
    if (project.hasProperty('curse_key_TehNut'))
        apiKey = project.curse_key_TehNut

    project {
        id = "${curse_id}"
        changelog = getChangelogText()
        releaseType = 'release'

        addGameVersion "1.14.2"
        addGameVersion "1.14.3"
        addGameVersion "1.14.4"

        addArtifact sourcesJar
    }
}